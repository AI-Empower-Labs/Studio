/*
 * Studio - AI Empower Labs
 *
 * # Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@aiempowerlabs.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DocumentPartition {
    /// Content of the document partition, aka chunk/block of text.
    #[serde(rename = "text", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub text: Option<Option<String>>,
    /// Rank value calculated from full-text search, used to determine the relevance of search results.
    #[serde(rename = "fullTextSearchRank", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub full_text_search_rank: Option<Option<f32>>,
    /// Represents the semantic similarity score associated with a record.
    #[serde(rename = "semanticSimilarity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub semantic_similarity: Option<Option<f32>>,
    /// Reciprocal rank fusion (RRF) score specifically derived from full-text search relevance.
    #[serde(rename = "fullTextSearchRrf", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub full_text_search_rrf: Option<Option<f32>>,
    /// Reciprocal Rank Fusion (RRF) score based on semantic similarity
    #[serde(rename = "semanticRrf", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub semantic_rrf: Option<Option<f32>>,
    /// Represents the combined Reciprocal Rank Fusion (RRF) score, which integrates results from multiple ranking methods such as semantic similarity and full-text search to enhance result relevance.
    #[serde(rename = "rrfScore", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rrf_score: Option<Option<f32>>,
    /// Language of partition if any. Optional.
    #[serde(rename = "language", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub language: Option<Option<String>>,
    /// Timestamp about the file/text partition.
    #[serde(rename = "lastUpdate", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<String>,
    /// List of document tags
    #[serde(rename = "tags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Option<std::collections::HashMap<String, Vec<String>>>>,
}

impl DocumentPartition {
    pub fn new() -> DocumentPartition {
        DocumentPartition {
            text: None,
            full_text_search_rank: None,
            semantic_similarity: None,
            full_text_search_rrf: None,
            semantic_rrf: None,
            rrf_score: None,
            language: None,
            last_update: None,
            tags: None,
        }
    }
}

