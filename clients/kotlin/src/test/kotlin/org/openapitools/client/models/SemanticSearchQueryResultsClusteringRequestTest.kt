/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.SemanticSearchQueryResultsClusteringRequest

class SemanticSearchQueryResultsClusteringRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SemanticSearchQueryResultsClusteringRequest
        //val modelInstance = SemanticSearchQueryResultsClusteringRequest()

        // to test the property `clusterCount` - The number of clusters to be used in k-means clustering.
        should("test clusterCount") {
            // uncomment below to test the property
            //modelInstance.clusterCount shouldBe ("TODO")
        }

        // to test the property `maxDegreeOfParallelism` - The Maximum Degrees Of Parallelism
        should("test maxDegreeOfParallelism") {
            // uncomment below to test the property
            //modelInstance.maxDegreeOfParallelism shouldBe ("TODO")
        }

        // to test the property `index` - Optional index to specify which index to search in. Defaults to 'default'.
        should("test index") {
            // uncomment below to test the property
            //modelInstance.index shouldBe ("TODO")
        }

        // to test the property `minRelevance` - The minimum relevance value used for querying the search result audit.
        should("test minRelevance") {
            // uncomment below to test the property
            //modelInstance.minRelevance shouldBe ("TODO")
        }

        // to test the property `maxRelevance` - The maximum relevance value to be used in the search query.
        should("test maxRelevance") {
            // uncomment below to test the property
            //modelInstance.maxRelevance shouldBe ("TODO")
        }

        // to test the property `llmModel` - Specifies the name of the LLM (Language Model) to be used in the KMeans clustering algorithm.
        should("test llmModel") {
            // uncomment below to test the property
            //modelInstance.llmModel shouldBe ("TODO")
        }

        // to test the property `embeddingModel` - The name of the embedding model used for clustering.
        should("test embeddingModel") {
            // uncomment below to test the property
            //modelInstance.embeddingModel shouldBe ("TODO")
        }

    }
}
