/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.DocumentCitation
import org.openapitools.client.models.DocumentPartition

class DocumentCitationTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DocumentCitation
        //val modelInstance = DocumentCitation()

        // to test the property `link` - URL or reference to the original source document
        should("test link") {
            // uncomment below to test the property
            //modelInstance.link shouldBe ("TODO")
        }

        // to test the property `index` - Identifier or position of the citation within the source
        should("test index") {
            // uncomment below to test the property
            //modelInstance.index shouldBe ("TODO")
        }

        // to test the property `documentId` - Unique identifier for the document
        should("test documentId") {
            // uncomment below to test the property
            //modelInstance.documentId shouldBe ("TODO")
        }

        // to test the property `fileId` - Unique identifier for the file in storage
        should("test fileId") {
            // uncomment below to test the property
            //modelInstance.fileId shouldBe ("TODO")
        }

        // to test the property `sourceContentType` - Format of the source (e.g., 'pdf', 'docx', 'chat')
        should("test sourceContentType") {
            // uncomment below to test the property
            //modelInstance.sourceContentType shouldBe ("TODO")
        }

        // to test the property `sourceName` - Human-readable name or title of the source
        should("test sourceName") {
            // uncomment below to test the property
            //modelInstance.sourceName shouldBe ("TODO")
        }

        // to test the property `sourceUrl` - Web URL of the source for online content
        should("test sourceUrl") {
            // uncomment below to test the property
            //modelInstance.sourceUrl shouldBe ("TODO")
        }

        // to test the property `partitions` - Array of text segments used from the source
        should("test partitions") {
            // uncomment below to test the property
            //modelInstance.partitions shouldBe ("TODO")
        }

    }
}
