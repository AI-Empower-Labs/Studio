/*
 * Studio - AI Empower Labs
 *
 * # Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@aiempowerlabs.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing DocumentCitation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DocumentCitationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DocumentCitation
        //private DocumentCitation instance;

        public DocumentCitationTests()
        {
            // TODO uncomment below to create an instance of DocumentCitation
            //instance = new DocumentCitation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DocumentCitation
        /// </summary>
        [Fact]
        public void DocumentCitationInstanceTest()
        {
            // TODO uncomment below to test "IsType" DocumentCitation
            //Assert.IsType<DocumentCitation>(instance);
        }

        /// <summary>
        /// Test the property 'Link'
        /// </summary>
        [Fact]
        public void LinkTest()
        {
            // TODO unit test for the property 'Link'
        }

        /// <summary>
        /// Test the property 'Index'
        /// </summary>
        [Fact]
        public void IndexTest()
        {
            // TODO unit test for the property 'Index'
        }

        /// <summary>
        /// Test the property 'DocumentId'
        /// </summary>
        [Fact]
        public void DocumentIdTest()
        {
            // TODO unit test for the property 'DocumentId'
        }

        /// <summary>
        /// Test the property 'FileId'
        /// </summary>
        [Fact]
        public void FileIdTest()
        {
            // TODO unit test for the property 'FileId'
        }

        /// <summary>
        /// Test the property 'SourceContentType'
        /// </summary>
        [Fact]
        public void SourceContentTypeTest()
        {
            // TODO unit test for the property 'SourceContentType'
        }

        /// <summary>
        /// Test the property 'SourceName'
        /// </summary>
        [Fact]
        public void SourceNameTest()
        {
            // TODO unit test for the property 'SourceName'
        }

        /// <summary>
        /// Test the property 'SourceUrl'
        /// </summary>
        [Fact]
        public void SourceUrlTest()
        {
            // TODO unit test for the property 'SourceUrl'
        }

        /// <summary>
        /// Test the property 'Partitions'
        /// </summary>
        [Fact]
        public void PartitionsTest()
        {
            // TODO unit test for the property 'Partitions'
        }
    }
}
