/*
 * Studio - AI Empower Labs
 * # Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@aiempowerlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DocumentPartition
 */
public class DocumentPartitionTest {
    private final DocumentPartition model = new DocumentPartition();

    /**
     * Model tests for DocumentPartition
     */
    @Test
    public void testDocumentPartition() {
        // TODO: test DocumentPartition
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'fullTextSearchRank'
     */
    @Test
    public void fullTextSearchRankTest() {
        // TODO: test fullTextSearchRank
    }

    /**
     * Test the property 'semanticSimilarity'
     */
    @Test
    public void semanticSimilarityTest() {
        // TODO: test semanticSimilarity
    }

    /**
     * Test the property 'fullTextSearchRrf'
     */
    @Test
    public void fullTextSearchRrfTest() {
        // TODO: test fullTextSearchRrf
    }

    /**
     * Test the property 'semanticRrf'
     */
    @Test
    public void semanticRrfTest() {
        // TODO: test semanticRrf
    }

    /**
     * Test the property 'rrfScore'
     */
    @Test
    public void rrfScoreTest() {
        // TODO: test rrfScore
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'lastUpdate'
     */
    @Test
    public void lastUpdateTest() {
        // TODO: test lastUpdate
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

}
