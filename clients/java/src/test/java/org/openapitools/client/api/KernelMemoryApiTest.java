/*
 * Studio - AI Empower Labs
 * # Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@aiempowerlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataPipelineStatus;
import org.openapitools.client.model.DeleteAccepted;
import org.openapitools.client.model.IndexCollection;
import org.openapitools.client.model.MemoryAnswer;
import org.openapitools.client.model.MemoryQuery;
import org.openapitools.client.model.ProblemDetails;
import org.openapitools.client.model.SearchQuery;
import org.openapitools.client.model.SearchResult;
import org.openapitools.client.model.StreamableFileContent;
import org.openapitools.client.model.UploadAccepted;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KernelMemoryApi
 */
@Disabled
public class KernelMemoryApiTest {

    private final KernelMemoryApi api = new KernelMemoryApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadGetTest() throws ApiException {
        String documentId = null;
        String filename = null;
        String index = null;
        StreamableFileContent response = api.downloadGet(documentId, filename, index);
        // TODO: test validations
    }

    /**
     * Query documents and forward result to LLM
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemoryAskTest() throws ApiException {
        MemoryQuery memoryQuery = null;
        MemoryAnswer response = api.kernelMemoryAsk(memoryQuery);
        // TODO: test validations
    }

    /**
     * Delete document from specific index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemoryDeleteTest() throws ApiException {
        String documentId = null;
        String index = null;
        DeleteAccepted response = api.kernelMemoryDelete(documentId, index);
        // TODO: test validations
    }

    /**
     * Delete index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemoryDeleteIndexTest() throws ApiException {
        String index = null;
        DeleteAccepted response = api.kernelMemoryDeleteIndex(index);
        // TODO: test validations
    }

    /**
     * List indexes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemoryGetIndexTest() throws ApiException {
        IndexCollection response = api.kernelMemoryGetIndex();
        // TODO: test validations
    }

    /**
     * Search for documents in specific index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemorySearchTest() throws ApiException {
        SearchQuery searchQuery = null;
        SearchResult response = api.kernelMemorySearch(searchQuery);
        // TODO: test validations
    }

    /**
     * Upload file for ingestion
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemoryUploadTest() throws ApiException {
        UploadAccepted response = api.kernelMemoryUpload();
        // TODO: test validations
    }

    /**
     * Get ingestion status for specific document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void kernelMemoryUploadStatusTest() throws ApiException {
        String documentId = null;
        String index = null;
        DataPipelineStatus response = api.kernelMemoryUploadStatus(documentId, index);
        // TODO: test validations
    }

}
