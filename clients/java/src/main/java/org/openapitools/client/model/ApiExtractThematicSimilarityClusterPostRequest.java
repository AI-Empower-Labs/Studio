/*
 * Studio - AI Empower Labs
 * # Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@aiempowerlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiExtractThematicSimilarityClusterPostRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-09T14:26:26.192689642Z[Etc/UTC]", comments = "Generator version: 7.7.0-SNAPSHOT")
public class ApiExtractThematicSimilarityClusterPostRequest {
  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private List<String> input = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLUSTER_COUNT = "clusterCount";
  @SerializedName(SERIALIZED_NAME_CLUSTER_COUNT)
  private Integer clusterCount;

  public static final String SERIALIZED_NAME_MAX_DEGREE_OF_PARALLELISM = "maxDegreeOfParallelism";
  @SerializedName(SERIALIZED_NAME_MAX_DEGREE_OF_PARALLELISM)
  private Integer maxDegreeOfParallelism = 1;

  public static final String SERIALIZED_NAME_MAX_TOKENS = "maxTokens";
  @SerializedName(SERIALIZED_NAME_MAX_TOKENS)
  private Integer maxTokens = 10;

  public static final String SERIALIZED_NAME_LLM_MODEL = "llmModel";
  @SerializedName(SERIALIZED_NAME_LLM_MODEL)
  private String llmModel;

  public static final String SERIALIZED_NAME_EMBEDDING_MODEL = "embeddingModel";
  @SerializedName(SERIALIZED_NAME_EMBEDDING_MODEL)
  private String embeddingModel;

  public ApiExtractThematicSimilarityClusterPostRequest() {
  }

  public ApiExtractThematicSimilarityClusterPostRequest input(List<String> input) {
    this.input = input;
    return this;
  }

  public ApiExtractThematicSimilarityClusterPostRequest addInputItem(String inputItem) {
    if (this.input == null) {
      this.input = new ArrayList<>();
    }
    this.input.add(inputItem);
    return this;
  }

   /**
   * The input texts for generating clusters
   * @return input
  **/
  @javax.annotation.Nonnull
  public List<String> getInput() {
    return input;
  }

  public void setInput(List<String> input) {
    this.input = input;
  }


  public ApiExtractThematicSimilarityClusterPostRequest clusterCount(Integer clusterCount) {
    this.clusterCount = clusterCount;
    return this;
  }

   /**
   * The number of clusters requested for generating clusters
   * minimum: 2
   * maximum: 1000
   * @return clusterCount
  **/
  @javax.annotation.Nonnull
  public Integer getClusterCount() {
    return clusterCount;
  }

  public void setClusterCount(Integer clusterCount) {
    this.clusterCount = clusterCount;
  }


  public ApiExtractThematicSimilarityClusterPostRequest maxDegreeOfParallelism(Integer maxDegreeOfParallelism) {
    this.maxDegreeOfParallelism = maxDegreeOfParallelism;
    return this;
  }

   /**
   * The maximum degree of parallelism for the KMeans clustering algorithm
   * minimum: 1
   * maximum: 100
   * @return maxDegreeOfParallelism
  **/
  @javax.annotation.Nullable
  public Integer getMaxDegreeOfParallelism() {
    return maxDegreeOfParallelism;
  }

  public void setMaxDegreeOfParallelism(Integer maxDegreeOfParallelism) {
    this.maxDegreeOfParallelism = maxDegreeOfParallelism;
  }


  public ApiExtractThematicSimilarityClusterPostRequest maxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
    return this;
  }

   /**
   * The maximum number of tokens
   * minimum: 1
   * maximum: 100
   * @return maxTokens
  **/
  @javax.annotation.Nullable
  public Integer getMaxTokens() {
    return maxTokens;
  }

  public void setMaxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
  }


  public ApiExtractThematicSimilarityClusterPostRequest llmModel(String llmModel) {
    this.llmModel = llmModel;
    return this;
  }

   /**
   * The name of the LLM model. Optional.
   * @return llmModel
  **/
  @javax.annotation.Nullable
  public String getLlmModel() {
    return llmModel;
  }

  public void setLlmModel(String llmModel) {
    this.llmModel = llmModel;
  }


  public ApiExtractThematicSimilarityClusterPostRequest embeddingModel(String embeddingModel) {
    this.embeddingModel = embeddingModel;
    return this;
  }

   /**
   * The name of the embedding model used in the GenerateClusterHttpRequest. Optional.
   * @return embeddingModel
  **/
  @javax.annotation.Nullable
  public String getEmbeddingModel() {
    return embeddingModel;
  }

  public void setEmbeddingModel(String embeddingModel) {
    this.embeddingModel = embeddingModel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiExtractThematicSimilarityClusterPostRequest apiExtractThematicSimilarityClusterPostRequest = (ApiExtractThematicSimilarityClusterPostRequest) o;
    return Objects.equals(this.input, apiExtractThematicSimilarityClusterPostRequest.input) &&
        Objects.equals(this.clusterCount, apiExtractThematicSimilarityClusterPostRequest.clusterCount) &&
        Objects.equals(this.maxDegreeOfParallelism, apiExtractThematicSimilarityClusterPostRequest.maxDegreeOfParallelism) &&
        Objects.equals(this.maxTokens, apiExtractThematicSimilarityClusterPostRequest.maxTokens) &&
        Objects.equals(this.llmModel, apiExtractThematicSimilarityClusterPostRequest.llmModel) &&
        Objects.equals(this.embeddingModel, apiExtractThematicSimilarityClusterPostRequest.embeddingModel);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, clusterCount, maxDegreeOfParallelism, maxTokens, llmModel, embeddingModel);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiExtractThematicSimilarityClusterPostRequest {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    clusterCount: ").append(toIndentedString(clusterCount)).append("\n");
    sb.append("    maxDegreeOfParallelism: ").append(toIndentedString(maxDegreeOfParallelism)).append("\n");
    sb.append("    maxTokens: ").append(toIndentedString(maxTokens)).append("\n");
    sb.append("    llmModel: ").append(toIndentedString(llmModel)).append("\n");
    sb.append("    embeddingModel: ").append(toIndentedString(embeddingModel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("input");
    openapiFields.add("clusterCount");
    openapiFields.add("maxDegreeOfParallelism");
    openapiFields.add("maxTokens");
    openapiFields.add("llmModel");
    openapiFields.add("embeddingModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("input");
    openapiRequiredFields.add("clusterCount");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ApiExtractThematicSimilarityClusterPostRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiExtractThematicSimilarityClusterPostRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiExtractThematicSimilarityClusterPostRequest is not found in the empty JSON string", ApiExtractThematicSimilarityClusterPostRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiExtractThematicSimilarityClusterPostRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiExtractThematicSimilarityClusterPostRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiExtractThematicSimilarityClusterPostRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("input") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("input").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `input` to be an array in the JSON string but got `%s`", jsonObj.get("input").toString()));
      }
      if ((jsonObj.get("llmModel") != null && !jsonObj.get("llmModel").isJsonNull()) && !jsonObj.get("llmModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `llmModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("llmModel").toString()));
      }
      if ((jsonObj.get("embeddingModel") != null && !jsonObj.get("embeddingModel").isJsonNull()) && !jsonObj.get("embeddingModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embeddingModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embeddingModel").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiExtractThematicSimilarityClusterPostRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiExtractThematicSimilarityClusterPostRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiExtractThematicSimilarityClusterPostRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiExtractThematicSimilarityClusterPostRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiExtractThematicSimilarityClusterPostRequest>() {
           @Override
           public void write(JsonWriter out, ApiExtractThematicSimilarityClusterPostRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiExtractThematicSimilarityClusterPostRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiExtractThematicSimilarityClusterPostRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiExtractThematicSimilarityClusterPostRequest
  * @throws IOException if the JSON string is invalid with respect to ApiExtractThematicSimilarityClusterPostRequest
  */
  public static ApiExtractThematicSimilarityClusterPostRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiExtractThematicSimilarityClusterPostRequest.class);
  }

 /**
  * Convert an instance of ApiExtractThematicSimilarityClusterPostRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

