/*
Studio - AI Empower Labs

# Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.

API version: v1
Contact: support@aiempowerlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KeywordExtractionRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeywordExtractionRequestBody{}

// KeywordExtractionRequestBody struct for KeywordExtractionRequestBody
type KeywordExtractionRequestBody struct {
	// Text to perform keyword extraction on
	Text string `json:"text"`
	// Text to perform keyword extraction on
	Model NullableString `json:"model,omitempty"`
}

type _KeywordExtractionRequestBody KeywordExtractionRequestBody

// NewKeywordExtractionRequestBody instantiates a new KeywordExtractionRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeywordExtractionRequestBody(text string) *KeywordExtractionRequestBody {
	this := KeywordExtractionRequestBody{}
	this.Text = text
	return &this
}

// NewKeywordExtractionRequestBodyWithDefaults instantiates a new KeywordExtractionRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeywordExtractionRequestBodyWithDefaults() *KeywordExtractionRequestBody {
	this := KeywordExtractionRequestBody{}
	return &this
}

// GetText returns the Text field value
func (o *KeywordExtractionRequestBody) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *KeywordExtractionRequestBody) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *KeywordExtractionRequestBody) SetText(v string) {
	o.Text = v
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeywordExtractionRequestBody) GetModel() string {
	if o == nil || IsNil(o.Model.Get()) {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeywordExtractionRequestBody) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *KeywordExtractionRequestBody) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *KeywordExtractionRequestBody) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *KeywordExtractionRequestBody) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *KeywordExtractionRequestBody) UnsetModel() {
	o.Model.Unset()
}

func (o KeywordExtractionRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeywordExtractionRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	return toSerialize, nil
}

func (o *KeywordExtractionRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeywordExtractionRequestBody := _KeywordExtractionRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKeywordExtractionRequestBody)

	if err != nil {
		return err
	}

	*o = KeywordExtractionRequestBody(varKeywordExtractionRequestBody)

	return err
}

type NullableKeywordExtractionRequestBody struct {
	value *KeywordExtractionRequestBody
	isSet bool
}

func (v NullableKeywordExtractionRequestBody) Get() *KeywordExtractionRequestBody {
	return v.value
}

func (v *NullableKeywordExtractionRequestBody) Set(val *KeywordExtractionRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableKeywordExtractionRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableKeywordExtractionRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeywordExtractionRequestBody(val *KeywordExtractionRequestBody) *NullableKeywordExtractionRequestBody {
	return &NullableKeywordExtractionRequestBody{value: val, isSet: true}
}

func (v NullableKeywordExtractionRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeywordExtractionRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


