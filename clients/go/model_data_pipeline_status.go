/*
Studio - AI Empower Labs

# Studio API Documentation  ## Introduction Welcome to Studio by AI Empower Labs API documentation! We are thrilled to offer developers around the world access to our cutting-edge artificial intelligence technology and semantic search. Our API is designed to empower your applications with state-of-the-art AI capabilities, including but not limited to natural language processing, audio transcription, embedding, and predictive analytics.  Our mission is to make AI technology accessible and easy to integrate, enabling you to enhance your applications, improve user experiences, and innovate in your field. Whether you're building complex systems, developing mobile apps, or creating web services, our API provides you with the tools you need to incorporate AI functionalities seamlessly.  Support and Feedback We are committed to providing exceptional support to our developer community. If you have any questions, encounter any issues, or have feedback on how we can improve our API, please don't hesitate to contact our support team @ support@AIEmpowerLabs.com.  Terms of Use Please review our terms of use and privacy policy before integrating our API into your application. By using our API, you agree to comply with these terms.

API version: v1
Contact: support@aiempowerlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DataPipelineStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataPipelineStatus{}

// DataPipelineStatus struct for DataPipelineStatus
type DataPipelineStatus struct {
	Completed *bool `json:"completed,omitempty"`
	Failed *bool `json:"failed,omitempty"`
	Empty *bool `json:"empty,omitempty"`
	Index NullableString `json:"index,omitempty"`
	DocumentId NullableString `json:"document_id,omitempty"`
	Tags map[string][]string `json:"tags,omitempty"`
	Creation *time.Time `json:"creation,omitempty"`
	LastUpdate *time.Time `json:"last_update,omitempty"`
	Steps []string `json:"steps,omitempty"`
	RemainingSteps []string `json:"remaining_steps,omitempty"`
	CompletedSteps []string `json:"completed_steps,omitempty"`
}

// NewDataPipelineStatus instantiates a new DataPipelineStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataPipelineStatus() *DataPipelineStatus {
	this := DataPipelineStatus{}
	return &this
}

// NewDataPipelineStatusWithDefaults instantiates a new DataPipelineStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataPipelineStatusWithDefaults() *DataPipelineStatus {
	this := DataPipelineStatus{}
	return &this
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *DataPipelineStatus) GetCompleted() bool {
	if o == nil || IsNil(o.Completed) {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPipelineStatus) GetCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *DataPipelineStatus) SetCompleted(v bool) {
	o.Completed = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *DataPipelineStatus) GetFailed() bool {
	if o == nil || IsNil(o.Failed) {
		var ret bool
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPipelineStatus) GetFailedOk() (*bool, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given bool and assigns it to the Failed field.
func (o *DataPipelineStatus) SetFailed(v bool) {
	o.Failed = &v
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *DataPipelineStatus) GetEmpty() bool {
	if o == nil || IsNil(o.Empty) {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPipelineStatus) GetEmptyOk() (*bool, bool) {
	if o == nil || IsNil(o.Empty) {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasEmpty() bool {
	if o != nil && !IsNil(o.Empty) {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *DataPipelineStatus) SetEmpty(v bool) {
	o.Empty = &v
}

// GetIndex returns the Index field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataPipelineStatus) GetIndex() string {
	if o == nil || IsNil(o.Index.Get()) {
		var ret string
		return ret
	}
	return *o.Index.Get()
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataPipelineStatus) GetIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Index.Get(), o.Index.IsSet()
}

// HasIndex returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasIndex() bool {
	if o != nil && o.Index.IsSet() {
		return true
	}

	return false
}

// SetIndex gets a reference to the given NullableString and assigns it to the Index field.
func (o *DataPipelineStatus) SetIndex(v string) {
	o.Index.Set(&v)
}
// SetIndexNil sets the value for Index to be an explicit nil
func (o *DataPipelineStatus) SetIndexNil() {
	o.Index.Set(nil)
}

// UnsetIndex ensures that no value is present for Index, not even an explicit nil
func (o *DataPipelineStatus) UnsetIndex() {
	o.Index.Unset()
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataPipelineStatus) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId.Get()) {
		var ret string
		return ret
	}
	return *o.DocumentId.Get()
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataPipelineStatus) GetDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentId.Get(), o.DocumentId.IsSet()
}

// HasDocumentId returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasDocumentId() bool {
	if o != nil && o.DocumentId.IsSet() {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given NullableString and assigns it to the DocumentId field.
func (o *DataPipelineStatus) SetDocumentId(v string) {
	o.DocumentId.Set(&v)
}
// SetDocumentIdNil sets the value for DocumentId to be an explicit nil
func (o *DataPipelineStatus) SetDocumentIdNil() {
	o.DocumentId.Set(nil)
}

// UnsetDocumentId ensures that no value is present for DocumentId, not even an explicit nil
func (o *DataPipelineStatus) UnsetDocumentId() {
	o.DocumentId.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataPipelineStatus) GetTags() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataPipelineStatus) GetTagsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string][]string and assigns it to the Tags field.
func (o *DataPipelineStatus) SetTags(v map[string][]string) {
	o.Tags = v
}

// GetCreation returns the Creation field value if set, zero value otherwise.
func (o *DataPipelineStatus) GetCreation() time.Time {
	if o == nil || IsNil(o.Creation) {
		var ret time.Time
		return ret
	}
	return *o.Creation
}

// GetCreationOk returns a tuple with the Creation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPipelineStatus) GetCreationOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Creation) {
		return nil, false
	}
	return o.Creation, true
}

// HasCreation returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasCreation() bool {
	if o != nil && !IsNil(o.Creation) {
		return true
	}

	return false
}

// SetCreation gets a reference to the given time.Time and assigns it to the Creation field.
func (o *DataPipelineStatus) SetCreation(v time.Time) {
	o.Creation = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *DataPipelineStatus) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPipelineStatus) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *DataPipelineStatus) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataPipelineStatus) GetSteps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataPipelineStatus) GetStepsOk() ([]string, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []string and assigns it to the Steps field.
func (o *DataPipelineStatus) SetSteps(v []string) {
	o.Steps = v
}

// GetRemainingSteps returns the RemainingSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataPipelineStatus) GetRemainingSteps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RemainingSteps
}

// GetRemainingStepsOk returns a tuple with the RemainingSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataPipelineStatus) GetRemainingStepsOk() ([]string, bool) {
	if o == nil || IsNil(o.RemainingSteps) {
		return nil, false
	}
	return o.RemainingSteps, true
}

// HasRemainingSteps returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasRemainingSteps() bool {
	if o != nil && !IsNil(o.RemainingSteps) {
		return true
	}

	return false
}

// SetRemainingSteps gets a reference to the given []string and assigns it to the RemainingSteps field.
func (o *DataPipelineStatus) SetRemainingSteps(v []string) {
	o.RemainingSteps = v
}

// GetCompletedSteps returns the CompletedSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataPipelineStatus) GetCompletedSteps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CompletedSteps
}

// GetCompletedStepsOk returns a tuple with the CompletedSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataPipelineStatus) GetCompletedStepsOk() ([]string, bool) {
	if o == nil || IsNil(o.CompletedSteps) {
		return nil, false
	}
	return o.CompletedSteps, true
}

// HasCompletedSteps returns a boolean if a field has been set.
func (o *DataPipelineStatus) HasCompletedSteps() bool {
	if o != nil && !IsNil(o.CompletedSteps) {
		return true
	}

	return false
}

// SetCompletedSteps gets a reference to the given []string and assigns it to the CompletedSteps field.
func (o *DataPipelineStatus) SetCompletedSteps(v []string) {
	o.CompletedSteps = v
}

func (o DataPipelineStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataPipelineStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !IsNil(o.Empty) {
		toSerialize["empty"] = o.Empty
	}
	if o.Index.IsSet() {
		toSerialize["index"] = o.Index.Get()
	}
	if o.DocumentId.IsSet() {
		toSerialize["document_id"] = o.DocumentId.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Creation) {
		toSerialize["creation"] = o.Creation
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["last_update"] = o.LastUpdate
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	if o.RemainingSteps != nil {
		toSerialize["remaining_steps"] = o.RemainingSteps
	}
	if o.CompletedSteps != nil {
		toSerialize["completed_steps"] = o.CompletedSteps
	}
	return toSerialize, nil
}

type NullableDataPipelineStatus struct {
	value *DataPipelineStatus
	isSet bool
}

func (v NullableDataPipelineStatus) Get() *DataPipelineStatus {
	return v.value
}

func (v *NullableDataPipelineStatus) Set(val *DataPipelineStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDataPipelineStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDataPipelineStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataPipelineStatus(val *DataPipelineStatus) *NullableDataPipelineStatus {
	return &NullableDataPipelineStatus{value: val, isSet: true}
}

func (v NullableDataPipelineStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataPipelineStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


